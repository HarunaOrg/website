extends ./layout
block content

    if edit
        h1.admin__title Edit post
    else
        h1.admin__title Create new post

    if error
        div(style="background: red; text-align: center; margin-bottom: 2em; padding: 1.5em;")
            p= error

    if success
        div(style="background: green; text-align: center; margin-bottom: 2em; padding: 1.5em;")
            p= success

    if edit == true & post == null
        p Post does not exist
    else
        - formAction = edit==true ? '/admin/edit/' + post.permalink : '/admin/create'

        .composer.shadow__box

            form(action= formAction, method='post')
                .composer__entry
                    // label(for='title', class="composer__legend") Title:
                    textarea#title.composer__title(type='name', placeholder="Title", name='post_title')= (post && post.title ? post.title : '')
                .composer__entry
                    label(for='pic', class="composer__legend")
                        span.icon.ion-image
                        p Image
                    input#pic.composer__input(type='name', placeholder="Image", class="admin__input", name='post_pic', value= post && post.pic ? post.pic : '')
                .composer__entry
                    label(for='permalink', class="composer__legend")
                        span.icon.ion-link
                        p Permalink
                    input#permalink.composer__input(type='name', placeholder="Permalink", class="admin__input", name='post_permalink', value= post && post.permalink ? post.permalink : '')
                .composer__entry
                    label(for='author_name', class="composer__legend")
                        span.icon.ion-person
                        p Author
                    input#author.composer__input(type='author_name', placeholder="Author Name", class="admin__input", name='post_author_name', value= post && post.author_name ? post.author_name : 'Jorge Ferreiro')

                .composer__entry(style="display: none;")
                    label(for='author_pic', class="composer__legend")
                        span.icon.ion-person
                        p Author pic
                    input#author.composer__input(type='author_pic', placeholder="Author Pic", class="admin__input", name='post_author_pic', value= post && post.author_pic ? post.author_pic : '')

                .composer__entry
                    label(for='summary', class="composer__legend")
                        span.icon.ion-document-text
                        p Summary
                    textarea#summary.composer__input(type='summary', placeholder="Summary", class="admin__input", name='post_summary')= (post && post.summary ? post.summary : '')

                .composer__entry
                    textarea#body(type='name', class="admin__textarea", name='post_body')

                .composer__entry
                    h2 Category

                    mixin selectionItem(inputName, inputValue, title)
                        - isCategorySelected = post.category.indexOf(inputValue) > 0
                        .threeColsGrid__item
                            .threeColsGrid__item__wrapper
                                li.selectionBox__item
                                    .selectionBox__left
                                        input(checked= (isCategorySelected ? true : false), name= inputName, value= inputValue, type="checkbox")
                                    .selectionBox__right
                                        span= title

                    .threeColsGrid.selectionBox
                        +selectionItem('post_category', 'software', 'Software Eng.')
                        +selectionItem('post_category', 'product', 'Product')
                        +selectionItem('post_category', 'entrepreneurship', 'Â Entrepreneurship')
                        +selectionItem('post_category', 'event', 'Event')
                        +selectionItem('post_category', 'design', 'Design')

                .composer__entry
                    h2 Privacy

                    .threeColsGrid.selectionBox
                        .threeColsGrid__item
                            .threeColsGrid__item__wrapper
                                li.selectionBox__item
                                    .selectionBox__left
                                        input#isPublished(name="post_isPublished", type="checkbox", checked=(post && post.published==true ? true : false))
                                    .selectionBox__right
                                        span Is published?

                .composer__entry(style="margin-top: 2em;")
                    button.about_resume_button.about_resume_button_view.blogHeader_button(type="submit") Submit

        script(src="https://code.jquery.com/jquery-3.2.1.min.js", integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=", crossorigin="anonymous")
        script(src="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js")
        script(src="/bower_components/autogrow/autogrow.min.js")
        script.
            $('textarea').autogrow();
            var simplemde = new SimpleMDE({
                element: document.getElementById("body"),
                promptURLs: true,
                tabSize: 4,
                autosave: {
                    enabled: true,
                    uniqueId: "JorgeFerreiroBlog",
                    delay: 2000,
                }
            });
        if edit
            input(type="hidden", id="postBody", value= post.body)
            script.
                var data = $('#postBody').val()
                simplemde.value(data)